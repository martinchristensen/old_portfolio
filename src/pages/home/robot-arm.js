/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useEffect, useRef} from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import {useFrame} from "@react-three/fiber";

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/robot-arm.glb')
  const baseControlsRef = useRef(null);

  useFrame((state) => {
    const baseAngle = ()  => {return (Math.PI - Math.PI*state.mouse.x)};
    // baseControlsRef.current.rotation([0, baseAngle, 0]);
  });

  useEffect(() => {
    if(baseControlsRef.current) {
      console.log(baseControlsRef.current)
    }
  }, [baseControlsRef.current])

  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <group>
            <group rotation={[Math.PI / 2, 0, 0]}>
              <group>
                <group position={[0, 1.78, 0]} rotation={[0, 0, 0]} ref={baseControlsRef}> {/*Rotate base here*/}
                  <group position={[0.7, 2.68, 0.28]} rotation={[0, 0, -0.01]}>
                    <group position={[-0.02, 6.15, -1.13]} rotation={[0, 0, 0.01]}>
                      <group position={[-12.2, 2.01, 0.74]} rotation={[0, 0, 1.57]}>
                        <group position={[-3.39, 1.77, 0]} rotation={[-1.57, 1.43, 0]}>
                          <mesh geometry={nodes.Object_22.geometry} material={nodes.Object_22.material} />
                          <mesh geometry={nodes.Object_23.geometry} material={nodes.Object_23.material} />
                        </group>
                        <group position={[-3.38, 0.94, 0.83]} rotation={[-0.02, 1.44, 0.02]}>
                          <mesh geometry={nodes.Object_25.geometry} material={nodes.Object_25.material} />
                          <mesh geometry={nodes.Object_26.geometry} material={nodes.Object_26.material} />
                        </group>
                        <group position={[-3.38, 0.11, -0.01]} rotation={[1.57, 1.44, 0]}>
                          <mesh geometry={nodes.Object_28.geometry} material={nodes.Object_28.material} />
                          <mesh geometry={nodes.Object_29.geometry} material={nodes.Object_29.material} />
                        </group>
                        <group name="zange4_10" position={[-3.33, 0.95, -0.81]} rotation={[0, 0, -1.57]}>
                          <mesh geometry={nodes.Object_31.geometry} material={nodes.Object_31.material} />
                          <mesh geometry={nodes.Object_32.geometry} material={nodes.Object_32.material} />
                        </group>
                        <group position={[-2.98, 0.95, 0]} rotation={[0, 0, -1.57]} />
                        <mesh geometry={nodes.Object_16.geometry} material={nodes.Object_16.material} />
                        <mesh geometry={nodes.Object_17.geometry} material={materials.copper} />
                        <mesh geometry={nodes.Object_18.geometry} material={materials.ivory_gripper} />
                        <mesh geometry={nodes.Object_19.geometry} material={materials.grey} />
                      </group>
                      <mesh geometry={nodes.Object_14.geometry} material={materials.ivory} />
                    </group>
                    <mesh geometry={nodes.Object_12.geometry} material={materials['ivory_arm.001']} />
                  </group>
                  <mesh geometry={nodes.Object_10.geometry} material={materials.grey_rotation} />
                </group>
                <mesh geometry={nodes.Object_6.geometry} material={nodes.Object_6.material} />
                <mesh geometry={nodes.Object_7.geometry} material={nodes.Object_7.material} />
                <mesh geometry={nodes.Object_8.geometry} material={materials.grey_base} />
              </group>
              <group />
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/robot-arm.glb')
